<?php

/**
 * @file
 * Primary module hooks for task_nine_cron module.
 */

use Drupal\node\Entity\Node;

/**
 * This function is used to send a mail message for task nine cron job.
 */

/**
 * This function is used to send a mail message for task nine cron job.
 *
 * @param string $key
 *   The key of the mail template to use.
 * @param array $message
 *   The mail message array.
 * @param array $params
 *   The parameters for the mail template.
 */
function task_nine_cron_mail($key, &$message, $params) {
  $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
  switch ($key) {
    case 'log':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['text_area'];

      break;
  }
}

/**
 * Implements hook_cron().
 */

/**
 * The hook_cron() function is called every time cron runs.
 */
function task_nine_cron_cron() {
  $lastCronRun = \Drupal::state()->get('lastcronrun');
  $currentTimestamp = \Drupal::time()->getCurrentTime();
  if (empty($lastCronRun) || ($currentTimestamp - $lastCronRun) >= 1) {
    $query = \Drupal::entityQuery('node')->condition('type', 'logs')->condition('created', $lastCronRun, '>')->accessCheck(FALSE);
    $nids = $query->execute();
    foreach ($nids as $nid) {
      $node = Node::load($nid);
      $config = \Drupal::config('task_nine_cron.settings');
      $messageTemplate = $config->get('subject');
      $textTemplate = $config->get('text_area');
      // print_r($messageTemplate);
      // print_r($textTemplate);
      // exit;.
      $tokenService = \Drupal::token();
      $message = $tokenService->replace($messageTemplate, ['node' => $node], ['clear' => TRUE]);
      $text = $tokenService->replace($textTemplate, ['node' => $node], ['clear' => TRUE]);
      // print_r($message);
      // print_r($text);
      // exit;.
      $params = ['subject' => $message, 'text_area' => $text];
      $module = 'task_nine_cron';
      $key = 'log';
      $to = 'preethyray12@gmail.com';
      $langcode = \Drupal::currentUser()->getPreferredLangcode();
      $mailManager = \Drupal::service('plugin.manager.mail');
      $send = TRUE;
      $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
      if ($result['result'] !== TRUE) {
        \Drupal::messenger()->addMessage(t('There was a problem sending the email.'), 'error');
      }
      else {
        \Drupal::messenger()->addMessage(t('Email has been sent successfully.'), 'status');
      }
    }

    \Drupal::state()->set('lastcronrun', $currentTimestamp);
  }
}
